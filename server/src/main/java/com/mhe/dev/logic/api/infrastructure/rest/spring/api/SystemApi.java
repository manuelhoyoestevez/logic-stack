/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mhe.dev.logic.api.infrastructure.rest.spring.api;

import com.mhe.dev.logic.api.infrastructure.rest.spring.dto.ErrorDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-12T16:57:08.220+02:00[Europe/Paris]")
@Validated
@Api(value = "system", description = "the system API")
public interface SystemApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /system : Get system properties
     * Get system properties
     *
     * @return OK (status code 200)
     *         or Bad request (status code 400)
     */
    @ApiOperation(value = "Get system properties", nickname = "getSystemProperties", notes = "Get system properties", response = Object.class, tags={ "System", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Object.class),
        @ApiResponse(code = 400, message = "Bad request", response = ErrorDto.class) })
    @GetMapping(
        value = "/system",
        produces = { "application/json" }
    )
    default ResponseEntity<Object> getSystemProperties() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
